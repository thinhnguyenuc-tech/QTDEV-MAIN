const fs = require("fs-extra");
const path = require("path");

module.exports.config = {
  name: "keobuabao",
  version: "2.0.0",
  hasPermssion: 0,
  credits: "qt",
  description: "O·∫≥n t√π t√¨ ƒë·∫∑t c∆∞·ª£c",
  commandCategory: "Tr√≤ Ch∆°i",
  usages: "[k√©o|b√∫a|bao] [s·ªë ti·ªÅn c∆∞·ª£c]",
  cooldowns: 2
};

const choices = ["k√©o", "b√∫a", "bao"];
const emojis = { "k√©o": "‚úåÔ∏è", "b√∫a": "üëä", "bao": "‚úã" };

module.exports.onLoad = async function () {
  const axios = require("axios");
  const cachePath = path.join(__dirname, "cache");
  const images = {
    k√©o: "https://files.catbox.moe/jyqfba.jpg",
    b√∫a: "https://files.catbox.moe/jkp3ru.jpg",
    bao: "https://files.catbox.moe/ijcm1c.jpg"
  };

  for (const [name, url] of Object.entries(images)) {
    const imgPath = path.join(cachePath, `${name}.jpg`);
    if (!fs.existsSync(imgPath)) {
      const res = await axios.get(url, { responseType: "arraybuffer" });
      fs.writeFileSync(imgPath, Buffer.from(res.data));
    }
  }
};

module.exports.run = async function ({ api, event, args, Currencies }) {
  const { threadID, messageID, senderID } = event;
  const userChoice = args[0]?.toLowerCase();
  const bet = parseInt(args[1]);
  const userMoney = (await Currencies.getData(senderID)).money;

  if (!choices.includes(userChoice))
    return api.sendMessage("‚ö†Ô∏è Vui l√≤ng ch·ªçn k√©o/b√∫a/bao [s·ªë ti·ªÅn ƒë·∫∑t c∆∞·ª£c]", threadID, messageID);
  if (isNaN(bet) || bet < 1000)
    return api.sendMessage("‚ö†Ô∏è S·ªë ti·ªÅn c∆∞·ª£c ph·∫£i l√† s·ªë l·ªõn h∆°n ho·∫∑c b·∫±ng 1,000 VND", threadID, messageID);
  if (userMoney < bet)
    return api.sendMessage(`‚ö†Ô∏è B·∫°n kh√¥ng ƒë·ªß ti·ªÅn (${bet} VND).`, threadID, messageID);
  const botChoice = choices[Math.floor(Math.random() * 3)];

  let resultText, resultType;
  if (userChoice === botChoice) {
    resultText = ` [ ü§ù H√≤a! ]\nüë§ B·∫°n: ${emojis[userChoice]}\nü§ñ Bot: ${emojis[botChoice]}`;
    resultType = 3;
  } else if (
    (userChoice === "k√©o" && botChoice === "bao") ||
    (userChoice === "b√∫a" && botChoice === "k√©o") ||
    (userChoice === "bao" && botChoice === "b√∫a")
  ) {
    resultText = ` [ üéâ B·∫°n th·∫Øng! ]\nüë§ B·∫°n: ${emojis[userChoice]}\nü§ñ Bot: ${emojis[botChoice]}\nüí∏ +${bet} VND`;
    resultType = 0;
  } else {
    resultText = ` [ üí• B·∫°n thua! ]\nüë§ B·∫°n: ${emojis[userChoice]}\nü§ñ Bot: ${emojis[botChoice]}\nüí∏ -${bet} VND`;
    resultType = 1;
  }

  if (resultType === 0) await Currencies.increaseMoney(senderID, bet);
  else if (resultType === 1) await Currencies.decreaseMoney(senderID, bet);

  const imagePaths = [
    fs.createReadStream(path.join(__dirname, "cache", `${botChoice}.jpg`)),
    fs.createReadStream(path.join(__dirname, "cache", `${userChoice}.jpg`))
  ];

  return api.sendMessage({ body: resultText, attachment: imagePaths }, threadID, messageID);
};