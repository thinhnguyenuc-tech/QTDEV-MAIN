const axios = require('axios');
const fs = require('fs');
const path = require('path');
const sharp = require('sharp');

module.exports.config = {
  name: "appstore",
  version: "1.0.1",
  usePrefix: false,
  hasPermssion: 0,
  credits: "ti·∫øn",
  description: "T√¨m ki·∫øm v√† xem th√¥ng tin ·ª©ng d·ª•ng tr√™n App Store",
  commandCategory: "Th√¥ng Tin",
  usages: "[t√™n ·ª©ng d·ª•ng]",
  cooldowns: 5
};

module.exports.run = async function({ api, event, args }) {
  if (args.length === 0) {
    return api.sendMessage("Vui l√≤ng nh·∫≠p t√™n ·ª©ng d·ª•ng c·∫ßn t√¨m.", event.threadID, event.messageID);
  }

  const appName = args.join(" ");
  const encodedAppName = encodeURIComponent(appName);

  try {
    const response = await axios.get(`https://itunes.apple.com/search?term=${encodedAppName}&entity=software`);
    const apps = response.data.results;

    if (apps.length === 0) {
      return api.sendMessage("Kh√¥ng t√¨m th·∫•y ·ª©ng d·ª•ng n√†o v·ªõi t·ª´ kh√≥a b·∫°n cung c·∫•p.", event.threadID, event.messageID);
    }

    const searchResults = apps.slice(0, 5).map((app, index) => {
      return `${index + 1}. ${app.trackName} - ${app.artistName}\n` +
             `üì± Gi√°: ${app.formattedPrice || "Mi·ªÖn ph√≠"}\n` +
             `‚≠êÔ∏è ƒê√°nh gi√°: ${app.averageUserRating || "Ch∆∞a c√≥"} (${app.userRatingCount || 0} l∆∞·ª£t)\n` +
             `üåê Xem th√™m: ${app.trackViewUrl}\n`;
    }).join("\n\n");

    const attachments = [];
    for (const app of apps.slice(0, 5)) {
      try {
        const imageUrl = app.artworkUrl512; // ·∫¢nh ƒë·ªô ph√¢n gi·∫£i cao h∆°n
        const imagePath = path.resolve(__dirname, 'cache', `${app.trackId}.jpg`);
        
        // T·∫£i xu·ªëng h√¨nh ·∫£nh
        const imageResponse = await axios.get(imageUrl, { responseType: 'arraybuffer' });
        fs.writeFileSync(imagePath, Buffer.from(imageResponse.data, 'binary'));

        // Th√™m file v√†o danh s√°ch ƒë√≠nh k√®m
        attachments.push(fs.createReadStream(imagePath));
      } catch (error) {
        console.error(`L·ªói t·∫£i ·∫£nh cho ·ª©ng d·ª•ng ${app.trackName}:`, error.message);
      }
    }

    // G·ª≠i k·∫øt qu·∫£
    api.sendMessage({
      body: `üîç K·∫øt qu·∫£ t√¨m ki·∫øm cho t·ª´ kh√≥a: "${appName}"\n\n${searchResults}`,
      attachment: attachments
    }, event.threadID, () => {
      // X√≥a file cache sau khi g·ª≠i
      attachments.forEach(file => fs.unlinkSync(file.path));
    }, event.messageID);

  } catch (error) {
    console.error("L·ªói khi g·ªçi API App Store:", error.message);
    api.sendMessage("ƒê√£ x·∫£y ra l·ªói khi t√¨m ki·∫øm ·ª©ng d·ª•ng. Vui l√≤ng th·ª≠ l·∫°i sau.", event.threadID, event.messageID);
  }
};